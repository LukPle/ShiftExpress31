Index: src/components/Map.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Card } from \"@mui/joy\";\r\nimport * as d3 from \"d3\";\r\nimport germanyGeoJSON from \"../data/germany-states.json\";\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { FeatureCollection } from 'geojson';\r\n\r\nconst mapData: FeatureCollection = germanyGeoJSON as FeatureCollection;\r\n\r\nconst MapChart: React.FC = () => {\r\n    const svgRef = useRef<SVGSVGElement | null>(null);\r\n    const [selectedState, setSelectedState] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (!svgRef.current) return;\r\n\r\n        const svg = d3.select(svgRef.current);\r\n\r\n        // Define projection\r\n        const projection = d3.geoMercator().fitSize([width, height], mapData);\r\n\r\n        // Create a path generator\r\n        const pathGenerator = d3.geoPath().projection(projection);\r\n\r\n        //Handels the mouse hover\r\n        const handleMouseOver = (event: React.MouseEvent<SVGPathElement, MouseEvent>, d: any) => {\r\n            setSelectedState(d.properties.name);\r\n            d3.select(event.currentTarget as Element).style('fill', 'lightblue');\r\n        };\r\n        \r\n        //Handels the mouse exit\r\n        const handleMouseOut = (event: React.MouseEvent<SVGPathElement, MouseEvent>, d: any) => {\r\n            setSelectedState(null);\r\n            d3.select(event.currentTarget as Element).style('fill', 'blue');\r\n        };        \r\n\r\n        // Render the map\r\n        svg\r\n            .selectAll('path')\r\n            .data(mapData.features)\r\n            .enter()\r\n            .append('path')\r\n            .attr('d', (d) => pathGenerator(d) as string)\r\n            .style('fill', 'blue')\r\n            .on('mouseover', handleMouseOver)\r\n            .on('mouseout', handleMouseOut);\r\n\r\n    }, []);\r\n\r\n    const width = 500;\r\n    const height = 600;\r\n\r\n    return (\r\n        <Card variant=\"outlined\" sx={{ width: 500, height: 600 }}>\r\n            <svg\r\n                ref={svgRef}\r\n                width={width}\r\n                height={height}\r\n            ></svg>\r\n            {selectedState && (\r\n                <div style={{ position: 'absolute', pointerEvents: 'none' }}>\r\n                    {selectedState}\r\n                </div>\r\n            )}\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default MapChart;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/Map.tsx b/src/components/Map.tsx
--- a/src/components/Map.tsx	(revision 5fd7c33b08efc9886d7e28014ea2973ac8949fe3)
+++ b/src/components/Map.tsx	(date 1701259617834)
@@ -1,3 +1,4 @@
+
 import { Card } from "@mui/joy";
 import * as d3 from "d3";
 import germanyGeoJSON from "../data/germany-states.json";
@@ -21,6 +22,7 @@
         // Create a path generator
         const pathGenerator = d3.geoPath().projection(projection);
 
+
         //Handels the mouse hover
         const handleMouseOver = (event: React.MouseEvent<SVGPathElement, MouseEvent>, d: any) => {
             setSelectedState(d.properties.name);
Index: src/components/FederalStateBox.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Card } from \"@mui/joy\"\r\n\r\nexport default function FederalStateBox() {\r\n    return (\r\n        <Card\r\n            variant=\"outlined\"\r\n            sx={{\r\n            width: 300,\r\n            height: 150\r\n            }}\r\n        >\r\n        </Card>\r\n    )\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/FederalStateBox.tsx b/src/components/FederalStateBox.tsx
--- a/src/components/FederalStateBox.tsx	(revision 5fd7c33b08efc9886d7e28014ea2973ac8949fe3)
+++ b/src/components/FederalStateBox.tsx	(date 1701424464577)
@@ -9,6 +9,9 @@
             height: 150
             }}
         >
+
+
+
         </Card>
     )
 }
\ No newline at end of file
